[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "narrative"
version = "0.2.1"
description = "A Python library that marries symbolic planning with large language models (LLMs) to create compelling narratives"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/org/narrative"
documentation = "https://org.github.io/narrative"
keywords = ["narrative", "storytelling", "llm", "planning", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Text Processing :: Linguistic",
]
packages = [
    { include = "narrative" }
]

[tool.poetry.dependencies]
python = "^3.12"
networkx = "^3.2"
pydantic = "^2.5"

# Optional dependencies
matplotlib = { version = "^3.8", optional = true }
openai = { version = "^1.3", optional = true }
httpx = { version = "^0.25", optional = true }
griffe = "0.36.1"
mkdocs-autorefs = "^1.4.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-cov = "^4.1"
mypy = "^1.7"
ruff = "^0.1"
black = "^23.11"
isort = "^5.12"
pre-commit = "^3.5"
commitizen = "^3.12"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5"
mkdocs-material = "^9.4"
mkdocstrings = { version = "^0.23", extras = ["python"] }
mkdocs-gen-files = "^0.5"
mkdocs-literate-nav = "^0.6"
mkdocs-section-index = "^0.3"

[tool.poetry.extras]
visualization = ["matplotlib"]
openai = ["openai"]
http = ["httpx"]
all = ["matplotlib", "openai", "httpx"]

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = []
line-length = 88
target-version = "py312"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.1"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "narrative/__init__.py:__version__"
]
update_changelog_on_bump = true
